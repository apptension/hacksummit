#%RAML 0.8
title: HacksummitAPI
version: v1
baseUri: http://hacksummit.apptension.com
mediaType:  application/json
schemas:
  - User: !include schemas/user.json
  - Project: !include schemas/project.json
  - Skillset: !include schemas/skillset.json
  - Skill: !include schemas/skill.json
  - Evaluation: !include schemas/evaluation.json
  - Role: !include schemas/role.json
/user:
  get:
    description: Return the list of the users
    responses:
      200:
        body:
          application/json:
            example: !include examples/users.json
  /me:
    get:
      description: Returns current logged user
      responses:
        200:
          body:
            application/json:
              schema: User
  /logout:
    post:
      description: Log out current user
      responses:
        200:
          body:
            application/json:
              example: |
                { "success": true }
  /login:
    post:
      description: Loggin user with a given id
      body:
        application/json:
          example: |
            { "userId": 1 }
      responses:
        200:
          body:
            application/json:
              example: |
                { "success": true }

  /{id}:
    /role:
      get:
        description: list all user roles
        responses:
          200:
            body:
              application/json:
                example: !include examples/roles.json
      post:
        description: sets user roles
        body:
          application/json:
            schema: !include schemas/roles_assign_post.json
        responses:
          200:
            body:
              application/json:
                example: |
                  { "success": true }

    /evaluation:
      get:
        description: return latest evaluation
        responses:
          200:
            body:
              application/json:
                schema: Evaluation
      post:
        description: save the evaluation
        body:
          application/json:
            schema: Evaluation
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "success": true
                  }

/project:
  get:
    description: Returns list of the projects
    responses:
      200:
        body:
          application/json:
            example: !include examples/projects.json
  post:
    description: Add new project
    body:
      application/json:
        schema: Project
    responses:
      200:
        body:
          application/json:
            schema: Project
  /{id}:
    get:
      description: Get single project
      responses:
        200:
          body:
            application/json:
              schema: Project
    put:
      description: Update project
      body:
        application/json:
          schema: Project
      responses:
        200:
          body:
            application/json:
              schema: Project
    delete:
      description: Remove project
      responses:
        204:
          description: No content
    /skillset:
      get:
        description: Returns list of assigned skillsets to a project
        responses:
          200:
            body:
              application/json:
                example: !include ./examples/skillsets.json

/skill:
  get:
    description: Returns list of the skills
    responses:
      200:
        body:
          application/json:
            example: !include examples/skills.json
  post:
    description: Add new skill
    body:
      application/json:
        schema: Skill
    responses:
      200:
        body:
          application/json:
            schema: Skill
  /{id}:
    get:
      description: Get single skill
      responses:
        200:
          body:
            application/json:
              schema: Skill
    put:
      description: Update skill
      body:
        application/json:
          schema: Skill
      responses:
        200:
          body:
            application/json:
              schema: Skill
    delete:
      description: Remove skill
      responses:
        204:
          description: No content

/skillset:
  get:
    description: Returns list of the skillsets
    responses:
      200:
        body:
          application/json:
            example: !include examples/skillsets.json
  post:
    description: Add new skillset
    body:
      application/json:
        schema: Skillset
    responses:
      200:
        body:
          application/json:
            schema: Skillset
  /{id}:
    get:
      description: Get single skillset
      responses:
        200:
          body:
            application/json:
              schema: Skillset
    put:
      description: Update skillset
      body:
        application/json:
          schema: Skillset
      responses:
        200:
          body:
            application/json:
              schema: Skillset
    delete:
      description: Remove skillset
      responses:
        204:
          description: No content
    # /skill:
    #   get:
    #     description: return skills assigned to skillset
    #     responses:
    #       200:
    #         body:
    #           application/json:
    #             example: !include examples/skills.json
    #   post:
    #     description: assign skills to skillset
    #     body:
    #       application/json:
    #         schema: !include schemas/skills_assign_post.json
    #     responses:
    #       200:
    #         body:
    #           application/json:
    #             example: !include examples/skills.json

/role:
  get:
    description: Returns list of roles
    responses:
      200:
        body:
          application/json:
            example: !include examples/roles.json
  post:
    description: Add new role
    body:
      application/json:
        schema: Role
    responses:
      200:
        body:
          application/json:
            schema: Role
  /{id}:
    get:
      description: Get single role
      responses:
        200:
          body:
            application/json:
              schema: Role
    put:
      description: Update role
      body:
        application/json:
          schema: Role
      responses:
        200:
          body:
            application/json:
              schema: Role
    delete:
      description: Remove role
      responses:
        204:
          description: No content
    # /skill:
    #   get:
    #     description: return skills assigned to role
    #     responses:
    #       200:
    #         body:
    #           application/json:
    #             example: !include examples/skills.json
    #   post:
    #     description: assign skills to role
    #     body:
    #       application/json:
    #         schema: !include schemas/skills_assign_post.json
    #     responses:
    #       200:
    #         body:
    #           application/json:
    #             example: !include examples/skills.json

/stat:
  get:
    description: Returns stats for given user
    queryParameters:
      startDate:
        type: date
      endDate:
        type: date
      user:
      project:
      skill:

    responses:
      200:
        body:
          application/json:
            example: !include ./examples/stats.json
